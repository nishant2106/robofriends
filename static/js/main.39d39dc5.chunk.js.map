{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCMCQ,EAXF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACI,sBAAKC,UAAY,uDAAjB,UACI,qBAAKC,IAAM,SAASC,IAAG,+BAA4BH,EAA5B,cACvB,gCACI,6BAAKF,IACL,6BAAKC,WCaNK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACD,EAAOE,GAAR,OACP,cAAC,EAAD,CAEIP,GAAMK,EAAOL,GACbF,KAAQO,EAAOP,KACfC,MAASM,EAAON,OAHTM,EAAOL,UCKvBQ,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKR,UAAY,MAAjB,SACI,uBACIA,UAAY,mCACZS,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCbI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAS,kBAAkBC,OAAO,SAAlE,SACKJ,EAAMK,YCeJC,E,kDAjBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAMlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAKX,MAAMK,a,GAdEQ,IAAMC,WC6CnBC,G,wDAtCX,aAAc,IAAD,8BACT,gBAWJC,eAAiB,SAACC,GACd,EAAKL,SAAU,CAAEM,YAAcD,EAAME,OAAOC,SAX5C,EAAKb,MAAQ,CACThB,OAAS,GACT2B,YAAc,IAJT,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CACL5C,MAAM,SAAA6C,GAAQ,OAAIA,EAASC,UAC3B9C,MAAM,SAAA+C,GAAK,OAAI,EAAKZ,SAAS,CAAErB,OAAOiC,S,oBAK3C,WAAS,IAAD,EAC0Bb,KAAKJ,MAA5BhB,EADH,EACGA,OAAQ2B,EADX,EACWA,YACTO,EAAelC,EAAOmC,QAAO,SAAAC,GAC/B,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASX,EAAYU,kBAEzD,OAAIrC,EAAOuC,OAKH,sBAAK3C,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWQ,aAAiBgB,KAAKK,iBACjC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAASkC,WAT5B,kD,GAtBDX,cCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.39d39dc5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name,email,id}) => {\n    return (\n        <div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5\">\n            <img alt = \"robots\" src = {`https://robohash.org/${id}?200x200`}></img>\n            <div>\n                <h2>{name}</h2>\n                <h3>{email}</h3>\n            </div>\n        </div>\n    )\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    return (\n        <div>\n            {\n                robots.map((robots,index) => (\n                    <Card \n                        key = {robots.id} \n                        id = {robots.id} \n                        name = {robots.name} \n                        email = {robots.email} \n                        />\n                    )\n                )\n            }\n        </div>\n    )\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className = \"pa2\">\n            <input \n                className = \"pa3 ba b--green bg-lightest-blue\"\n                type = \"search\" \n                placeholder = \"Search Robots\"\n                onChange = {searchChange}\n            />\n        </div>\n    )\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow:'scroll', border : '5px solid black',height:'500px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n    componentDidCatch(error,info){\n        this.setState({hasError: true});\n    }\n    render(){\n        if(this.state.hasError){\n            return <h1>Oopsss. That is not good.</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport './App.css';\n\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots : [],\n            searchField : ''\n        }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then( response => response.json())\n        .then( users => this.setState({ robots:users }))\n    }\n    onSearchChange = (event) => {\n        this.setState( { searchField : event.target.value})\n    }\n    render(){\n        const {robots, searchField} = this.state;\n        const filterRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        if(!robots.length){\n            return(<h1>Loading.....</h1>)\n        }\n        else{\n            return(\n                <div className = \"tc\">\n                    <h1 className = \"f1\">RoboFriends</h1>\n                    <SearchBox searchChange = { this.onSearchChange }/> \n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots= {filterRobots} />\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            )\n        }\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}